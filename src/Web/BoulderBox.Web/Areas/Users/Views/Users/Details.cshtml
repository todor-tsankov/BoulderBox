@model BoulderBox.Web.ViewModels.Users.Users.UserDetailsViewModel

@{
    ViewData["Title"] = Model.UserName;
}

<div class="row ml-2">
    @if (Model.ImageSource != null)
    {
        <img src="@Url.Content(Model.ImageSource)" class="rounded-circle border" width="80" height="80" />
    }
    else
    {
        <i class="far fa-user-circle fa-5x"></i>
    }
    <h2 class="ml-3 mt-3">@Model.UserName</h2>
</div>

@if (Model.Bio != null)
{
    <hr class="bg-secondary mt-4" />
    <p class="text-break">@(Model.Bio)</p>
}

<hr class="bg-secondary mb-4" />

<div class="row col-12 text-center justify-content-center mb-4">
    <div class="row col-12 col-lg-5 jumbotron mt-lg-5 mr-lg-4 pt-3 pb-2">
        <h5 class="col-12">Statistics</h5>
        <div class="col-6">
            <h6>Points</h6>
            <p>Weekly: <strong>@Model.PointsWeekly</strong></p>
            <p>Monthly:<strong> @Model.PointsMonthly</strong></p>
            <p>Yearly:<strong> @Model.PointsYearly</strong></p>
            <p>All Time: <strong>@Model.PointsAllTime</strong></p>
        </div>
        <div class="col-6">
            <h6>Count</h6>
            <p>Ascents: <strong>@Model.AscentsCount</strong></p>
            <p>Boulders:<strong> @Model.BouldersCount</strong></p>
            <p>Posts:<strong> @Model.PostsCount</strong></p>
            <p>Comments: <strong>@Model.CommentsCount</strong></p>
        </div>
    </div>
    <div id="ascentsChart" class="col-lg-6 col-12 p-0" style="height: 400px"></div>
</div>

<h3>Ascents</h3>

<div class="table-responsive mt-3">
    <table class="table table-borderless table-hover table-striped">
        <thead class="bg-primary text-light">
            <tr>
                <th scope="col" class="text-center"><i class="fas fa-camera-retro fa-1x"></i></th>
                <th>Date</th>
                <th>Style</th>
                <th>Boulder</th>
                <th>Comment</th>
                <th>Stars</th>
                @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName) || this.User.FindFirst(ClaimTypes.NameIdentifier)?.Value == Model.Id)
                {
                    <th></th>
                }
            </tr>
        </thead>

        @if (!Model.Ascents.Any())
        {
            <tbody class="table-secondary">
                <tr>
                    <td>No ascents</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName) || this.User.FindFirst(ClaimTypes.NameIdentifier)?.Value == Model.Id)
                    {
                        <th></th>
                    }
                </tr>
            </tbody>
        }

        @foreach (var group in Model.Ascents)
        {
            <thead class="table-secondary">
                <tr>
                    <th class="text-center">@group.Key</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName) || this.User.FindFirst(ClaimTypes.NameIdentifier)?.Value == Model.Id)
                    {
                        <th></th>
                    }
                </tr>
            </thead>

            <tbody class="table-light">
                @foreach (var ascent in group.Ascents)
                {
                    var styleBadge = "badge badge-";

                    if (ascent.StyleShortText == "OS")
                    {
                        styleBadge += "success";
                    }
                    else if (ascent.StyleShortText == "FL")
                    {
                        styleBadge += "warning";
                    }
                    else if (ascent.StyleShortText == "RP")
                    {
                        styleBadge += "danger";
                    }

                    <tr>
                        <td width="50">
                            @if (ascent.BoulderImageSource != null)
                            {
                                <img src="@ascent.BoulderImageSource" class="rounded-circle border" width="30" height="30" />
                            }
                        </td>
                        <td>@ascent.Date.ToString("dd/MM/yyyy")</td>
                        <td><span class="@styleBadge">@ascent.StyleShortText</span></td>
                        <td><a asp-area="Boulders" asp-controller="Boulders" asp-action="Details" asp-route-id="@ascent.BoulderId" class="text-dark text-nowrap">@ascent.BoulderName</a></td>
                        @if (ascent.Comment != null)
                        {
                            <td>@ascent.Comment</td>
                        }
                        else
                        {
                            <td>-</td>
                        }
                        @if (ascent.Stars == null)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td class="text-nowrap">
                                @for (int i = 0; i < ascent.Stars; i++)
                                {
                                    <i class="far fa-star"></i>
                                }
                            </td>
                        }
                        @if (this.User.FindFirst(ClaimTypes.NameIdentifier)?.Value == Model.Id)
                        {
                            <td><a asp-area="Boulders" asp-controller="Ascents" asp-action="Edit" asp-route-id="@ascent.Id" class="btn btn-primary">Edit</a></td>
                        }
                        else if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                        {
                            <td><a asp-area="Administration" asp-controller="Ascents" asp-action="Edit" asp-route-id="@ascent.Id" class="btn btn-primary">Edit</a></td>
                        }
                    </tr>
                }
            </tbody>
        }
    </table>
</div>

@section Scripts{
    <script>
        Highcharts.setOptions({
            colors: ['#cc1b1b', '#dfe620', '#22b324']
        });

        Highcharts.chart('ascentsChart', {
            chart: {
                type: 'bar'
            },
            title: {
                text: 'Ascents by grade and style'
            },
            xAxis: {
                categories: [
                    @foreach (var ascentGroup in Model.Ascents)
                    {
                        @Html.Raw($"'{ascentGroup.Key}',");
                    }
                ]
            },
            yAxis: {
                min: 0,
                minTickInterval: 1,
                title: {
                    text: ''
                }
            },
            legend: {
                reversed: true
            },
            plotOptions: {
                series: {
                    stacking: 'normal'
                }
            },
            series: [ {
                name: 'RP',
                    data: [
                        @foreach (var ascentGroup in Model.Ascents)
                    {
                        @Html.Raw($"{ascentGroup.Ascents.Count(x => x.StyleShortText == "RP")},");
                    }]
            }, {
                name: 'FL',
                    data: [
                        @foreach (var ascentGroup in Model.Ascents)
                    {
                        @Html.Raw($"{ascentGroup.Ascents.Count(x => x.StyleShortText == "FL")},");
                    }]
            }, {
                name: 'OS',
                data: [
                    @foreach (var ascentGroup in Model.Ascents)
                    {
                        @Html.Raw($"{ascentGroup.Ascents.Count(x => x.StyleShortText == "OS")},");
                    }]
            },]
        });
    </script>
}